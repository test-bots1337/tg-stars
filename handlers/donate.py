from aiogram import Router, F
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery, CallbackQuery

donate_router = Router()

@donate_router.callback_query(F.data == "subscribe_99")
async def subscribe_callback(callback: CallbackQuery):
    prices = [LabeledPrice(label="–ü–æ–¥–ø–∏—Å–∫–∞", amount=99)]
    await callback.message.answer_invoice(
        title="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
        description="–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π –∏ —Å—Ç–æ–∏—Ç 99 –∑–≤—ë–∑–¥",
        provider_token="",
        currency="XTR",
        prices=prices,
        payload="subscribe_99"
    )
    await callback.answer()

@donate_router.pre_checkout_query()
async def pre_checkout(pre_checkout_q: PreCheckoutQuery):
    await pre_checkout_q.answer(ok=True)

@donate_router.message(F.successful_payment)
async def on_success(message: Message):
    t_id = message.successful_payment.telegram_payment_charge_id
    await message.answer(
        "üì¨ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö</b>\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π –∏ —Å—Ç–æ–∏—Ç 99 –∑–≤—ë–∑–¥\n"
        f"<i>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:</i> <code>{t_id}</code>"
    )
